version: '3.8'

services:
  # 1Ô∏è‚É£ Web Frontend 1
  web-frontend:
    build: ./web-frontend-server
    container_name: web-frontend-server1
    ports:
      - "8080:80"
    depends_on:
      - application-backend
    networks:
      - cloud-net

  # 2Ô∏è‚É£ Web Frontend 2 (b·∫£n sao ƒë·ªÉ load balancing)
  web-frontend-2:
    build: ./web-frontend-server2
    container_name: web-frontend-server2
    depends_on:
      - application-backend
    networks:
      - cloud-net

  # 3Ô∏è‚É£ Application Backend (Flask/Python)
  application-backend:
    build: ./application-backend-server
    container_name: hotensvminiclouddemo-application-backend-1
    ports:
      - "8085:8085"
    networks:
      - cloud-net

  # 4Ô∏è‚É£ Relational Database (MariaDB)
  relational-database:
    image: mariadb:10.11
    container_name: hotensvminiclouddemo-relational-database-1
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: studentdb
    volumes:
      - ./relational-database-server/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    networks:
      - cloud-net

  # 5Ô∏è‚É£ Authentication (Keycloak)
  authentication-identity:
    image: quay.io/keycloak/keycloak:24.0.4
    container_name: hotensvminiclouddemo-authentication-identity-1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    ports:
      - "8081:8080"
    networks:
      - cloud-net

  # 6Ô∏è‚É£ Object Storage (MinIO)
  object-storage:
    image: minio/minio
    container_name: hotensvminiclouddemo-object-storage-1
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./object-storage-server/data:/data
    networks:
      - cloud-net

  # 7Ô∏è‚É£ Internal DNS (Bind9)
  internal-dns:
    image: internetsystemsconsortium/bind9:9.18
    container_name: hotensvminiclouddemo-internal-dns-1
    ports:
      - "1053:53/udp"
    volumes:
      - ./internal-dns-server:/etc/bind
    networks:
      - cloud-net

  # 8Ô∏è‚É£ Node Exporter (Monitoring)
  node-exporter:
    image: prom/node-exporter
    container_name: hotensvminiclouddemo-node-exporter-1
    ports:
      - "9100:9100"
    networks:
      - cloud-net

  # 9Ô∏è‚É£ Prometheus
  prometheus:
    image: prom/prometheus
    container_name: hotensvminiclouddemo-prometheus-1
    volumes:
      - ./monitoring-prometheus-server/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - node-exporter
    networks:
      - cloud-net

  # üîü Grafana
  grafana:
    image: grafana/grafana
    container_name: hotensvminiclouddemo-grafana-1
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - cloud-net

  # 1Ô∏è‚É£1Ô∏è‚É£ API Gateway / Reverse Proxy (Load Balancer)
  api-gateway:
    build: ./api-gateway-proxy-server
    container_name: hotensvminiclouddemo-api-gateway-1
    ports:
      - "80:80"
    volumes:
      - ./api-gateway-proxy-server/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web-frontend
      - web-frontend-2
      - application-backend
      - authentication-identity
    networks:
      - cloud-net

networks:
  cloud-net:
    driver: bridge
